              GruntHack 0.2.0 -- General information

GruntHack is a derivative of NetHack, the classic dungeon exploration game.
Significant changes from the 0.1.x series include: 
* More levels in Sokoban and new demon strongholds in Gehennom
* An overhauled monster spellcasting system
* More items usable by monsters

A fuller list of changes for this release can be found in the files
doc/changes02.0, doc/changes01.1, and doc/changes01.0 in the source
distribution.

The following HOWTO derives from NetHack's original information for
compiling the code tree.  GruntHack is still in a very experimental stage,
so some information contained hereafter may not necessarily apply.

                        - - - - - - - - - - -

Please read items (1), (2) and (3) BEFORE doing anything with your new code.

1.  Unpack the code in a dedicated new directory.  We will refer to that
    directory as the 'Top' directory.  It makes no difference what you
    call it.

2.  If there is no flaw in the packaging, many sub-directories will be
    automatically created, and files will be deposited in them:

    a.  A 'dat' directory, which contains a variety of data files.
    b.  A 'doc' directory, which contains various documentation.
    c.  An 'include' directory, which contains *.h files.
    d.  A 'src' directory, which contains game *.c files used by all versions.
    e.  A 'util' directory, which contains files for utility programs.
    f.  A 'sys' directory, which contains subdirectories for files that
        are operating-system specific.
    g.  A 'sys/share' subdirectory, which contains files shared by some OSs.
    h.  A 'sys/share/sounds' subsubdirectory, which contains sound files
        shared by some OSs.
    i.  A 'sys/amiga' subdirectory, which contains files specific to AmigaDOS.
    j.  A 'sys/amiga/ship' subsubdirectory
    k.  A 'sys/atari' subdirectory, which contains files specific to TOS.
    l.  A 'sys/be' subdirectory, which contains files specific to Be OS.
    m.  A 'sys/mac' subdirectory, which contains files specific to MacOS.
    n.  A 'sys/msdos' subdirectory, which contains files specific to MS-DOS.
    o.  A 'sys/os2' subdirectory, which contains files specific to OS/2.
    p.  A 'sys/unix' subdirectory, which contains files specific to UNIX.
    q.  A 'sys/vms' subdirectory, which contains files specific to VMS.
    r.  A 'sys/wince' subdirectory, which contains files specific to Windows CE.
    s.  A 'sys/winnt' subdirectory, which contains files specific to Windows NT.
    t.  A 'win' directory, which contains subdirectories for files that
        are windowing-system specific (but not operating-system specific).
    u.  A 'win/share' subdirectory, which contains files shared by some
        windowing systems.
    v.  A 'win/Qt' subdirectory, which contains files specific to Qt.
    w.  A 'win/X11' subdirectory, which contains files specific to X11.
    x.  A 'win/gem' subdirectory, which contains files specific to GEM.
    y.  A 'win/gnome' subdirectory, which contains files specific to GNOME.
    z.  A 'win/tty' subdirectory, which contains files specific to ttys.
    A.  A 'win/win32' subdirectory, which contains files specific to the
        Windows Win32 API.

    The names of these directories should not be changed unless you are
    ready to go through the makefiles and the makedefs program and change
    all the directory references in them.

3.  Having unpacked, you should have a file called 'Files' in your Top
    directory.  This file contains the list of all the files you now SHOULD
    have in each directory.  Please check the files in each directory
    against this list to make sure that you have a complete set.

4.  Before you do anything else, please read carefully the file called
    "license" in the 'dat' subdirectory.  It is expected that you comply
    with the terms of that license, and we are very serious about it.

5.  If everything is in order, you can now turn to trying to get the program
    to compile and run on your particular system.  It is worth mentioning
    that the default configuration is SysV/Sun/Solaris2.x (simply because
    the code was housed on such a system).  It is also worth mentioning
    here that GruntHack is a huge program.  If you intend to run it on a
    small machine, you'll have to make hard choices among the options
    available in config.h.

    The files sys/*/Install.* were written to guide you in configuring the
    program for your operating system.  The files win/*/Install.* are
    available, where necessary, to help you in configuring the program
    for particular windowing environments.  Reading them, and the man pages,
    should answer most of your questions.

    GruntHack was developed and tested on an x86-based Linux system, and
    has not been thoroughly tested on other platforms.  However, NetHack
    3.4 is known to run/compile on several platforms for which GruntHack
    should technically work with some tinkering:

        Apple Macintosh running MacOS 7.5 or higher, LinuxPPC, BeOS 4.0
        Atari ST/TT/Falcon running TOS (or MultiTOS) with GCC
        Commodore Amiga running AmigaDOS 3.0 or higher with SAS/C 6.x
                (but see Makefile.ami about DICE and Manx)
        DEC Alpha/VMS (aka OpenVMS AXP), running V1.x through V7.1
        DEC VAX/VMS, running V4.6 through V7.1
        HP 9000s700 running HP-UX 10.x, 11.x
        IBM PS/2 and AT compatibles running OS/2 - 2.0 and up with GCC emx
        Intel 80386 or greater (or clone) boxes running MS-DOS with DPMI.
        Intel 80386 or greater (or clone) boxes running Linux, or BSDI.
        Intel 80386 or greater (or clone) boxes running Windows 95/98/Me.
        Intel 80386 or greater (or clone) boxes running Windows NT/2000/XP/2003.
        Intel Pentium or better (or clone) running BeOS 4.5
        Sun SPARC based machine running SunOS 4.x, Solaris 2.x, or Solaris 7

    NetHack will also run on the following, but a cross-compiler hosted
    on another platform, such as win32, is required to build from source.

        Pocket PC devices running Windows CE 3.0 and higher
        H/PC Pro devices running Windows CE 2.11 and higher.
	Palm Size PC 1.1 devices running Windows CE 2.11

    Previous versions of NetHack were tested on the following systems:

        AT&T 3B1 running System V (3.51)
        AT&T 3B2/600 & 3B2/622 running System V R3.2.1
        AT&T 3B2/1000 Model 80 running System V R3.2.2
        AT&T 3B4000 running System V
        AT&T 6386 running System V R3.2
        Data General AViiON systems running DG/UX
        DEC vaxen running BSD, Ultrix
        Decstations running Ultrix 3.1, 4.x
        Encore Multimax running UMAX 4.2
        Gould NP1 running UTX 3/2
        HP 9000s300 running HP-UX
        HP 9000s700 running HP-UX 9.x
        IBM PC/RT and RS/6000 running AIX 3.x
        IBM PS/2 and AT compatibles running OS/2 1.1 - 2.0 (and probably
           Warp) with Microsoft 6.0, and OS/2 2.0 and up with IBM CSet++ 2.0.
        Intel 80386 or greater (or clone) running 386BSD
        Mips M2000 running RiscOS 4.1
        NeXT running Mach (using BSD configuration)
        Pyramid 9820x running OSx 4.4c
        SGI Iris running IRIX
        Stardent Vistra 800 running SysV R4.0
        Stride 460 running UniStride 2.1
        Sun-3s, -4s, and -386is running SunOS 3.x
        Sun-3s and -386is running SunOS 4.x
        Valid Logic Systems SCALD-System

                        - - - - - - - - - - -

Bugs in GruntHack are probably innumerable.  If you happen to find one,
please report it through the same channels by which you heard about and
obtained the game; it will be heard of sooner or later and may or may
not be fixed.

                  -- Good luck, and happy Hacking --
